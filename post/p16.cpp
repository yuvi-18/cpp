/*q1.  Explain how the object-oriented programming paradigm differs from procedural programming, emphasizing features like encapsulation and polymorphism.

ans. Encapsulation: In OOP, encapsulation means hiding the internal state of an object and exposing only what is necessary via public methods. This protects the data from unintended interference and misuse. Procedural programming doesnâ€™t inherently protect data; instead, data is often passed around globally or via function parameters.

Polymorphism: Polymorphism in OOP allows objects of different classes (often connected through inheritance) to be treated as objects of a common base class. This means we can write code that interacts with objects in a generic way, while each object can override methods to provide class-specific behavior. This flexibility is not as naturally supported in procedural programming, which doesn't leverage inheritance or method overriding.
*/